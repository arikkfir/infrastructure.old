name: Deploy Pull Request

on:
  issue_comment:
    types:
      - created
  push:
    branches: [ main ]
    paths:
      - kubernetes/**
      - terraform/**

defaults:
  run:
    shell: bash -eu {0}

jobs:

  setup:
    name: Setup
    if: >-
      (github.event_name == 'push' && github.ref == 'refs/heads/main') || 
      (github.event.issue.pull_request && github.event.comment.body == '/deploy')
    runs-on: ubuntu-20.04
    outputs:
      branch: ${{ steps.env.outputs.branch }}
      environment: ${{ steps.env.outputs.environment }}
    steps:
      - uses: xt0rted/pull-request-comment-branch@v1
        id: pr
      - run: |+
          if [[ "${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}" == "true" ]]; then
            BRANCH="main"
            ENVIRONMENT="production"
          else
            BRANCH="${{ steps.pr.outputs.head_ref }}"
            ENVIRONMENT="${{ steps.pr.outputs.head_ref }}"
          fi
          echo "::set-output name=branch::${BRANCH}"
          echo "::set-output name=environment::${ENVIRONMENT}"
        id: env

  create-deployment:
    needs: setup
    runs-on: ubuntu-20.04
    outputs:
      id: ${{ steps.create.outputs.deployment_id }}
    steps:
      - uses: tibdex/github-app-token@v1
        id: token
        with:
          app_id: ${{ secrets.ARIKKFIR_APP_ID }}
          private_key: ${{ secrets.ARIKKFIR_APP_PRIVATE_KEY }}
      - uses: chrnorm/deployment-action@releases/v1
        id: create
        with:
          initial_status: in_progress
          token: ${{ steps.token.outputs.token }}
          description: "Deploy branch '${{ needs.setup.outputs.branch }}'"
          environment: ${{ needs.setup.outputs.environment }}
          ref: ${{ needs.setup.outputs.branch }}

  deploy-terraform-gcp:
    needs: [ setup, create-deployment ]
    runs-on: ubuntu-20.04
    environment: ${{ needs.setup.outputs.environment }}
    defaults:
      run:
        working-directory: ./terraform/gcp
    env:
      TF_IN_AUTOMATION: true
    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v0
        with:
          service_account: gha-arikkfir-infrastructure@arikkfir.iam.gserviceaccount.com
          credentials_json: ${{ secrets.GCP_SA_GHA_ARIKKFIR_INFRASTRUCTURE_KEY }}
      - uses: google-github-actions/setup-gcloud@v0
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7
      - run: terraform init -input=false -no-color
      - run: terraform apply -input=false -lock-timeout=180s -auto-approve -no-color
        id: apply
        env:
          TF_VAR_environment: ${{ needs.setup.outputs.environment }}
          TF_VAR_gcp_billing_account: ${{ secrets.GCP_BILLING_ACCOUNT_ID }}
          TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_gcp_region: europe-west3
          TF_VAR_gcp_zone: europe-west3-a

  on-failure:
    needs: [ setup, create-deployment, deploy-terraform-gcp ]
    runs-on: ubuntu-20.04
    environment: ${{ needs.setup.outputs.environment }}
    if: failure() || cancelled()
    steps:
      - uses: tibdex/github-app-token@v1
        id: token
        with:
          app_id: ${{ secrets.ARIKKFIR_APP_ID }}
          private_key: ${{ secrets.ARIKKFIR_APP_PRIVATE_KEY }}
      - uses: chrnorm/deployment-status@releases/v1
        with:
          state: failure
          token: ${{ steps.token.outputs.token }}
          deployment_id: ${{ needs.create-deployment.outputs.id }}

  on-success:
    needs: [ setup, create-deployment, deploy-terraform-gcp ]
    runs-on: ubuntu-20.04
    environment: ${{ needs.setup.outputs.environment }}
    if: success()
    steps:
      - uses: tibdex/github-app-token@v1
        id: token
        with:
          app_id: ${{ secrets.ARIKKFIR_APP_ID }}
          private_key: ${{ secrets.ARIKKFIR_APP_PRIVATE_KEY }}
      - uses: chrnorm/deployment-status@releases/v1
        with:
          state: success
          token: ${{ steps.token.outputs.token }}
          deployment_id: ${{ needs.create-deployment.outputs.id }}
