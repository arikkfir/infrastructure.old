name: Apply

on:
  pull_request:
    paths:
      - .github/workflows/apply.yml
      - kubernetes/**
      - terraform/**
    types:
      - synchronize
      - opened
      - reopened
  push:
    branches: [ main ]
    paths:
      - .github/workflows/apply.yml
      - kubernetes/**
      - terraform/**

concurrency:
  cancel-in-progress: false
  group: terraform/gcp2

defaults:
  run:
    shell: bash -eu {0}

jobs:

  # TODO: slug environment name
  # TODO: what about commenting on the commit? (for main)

  setup:
    name: Setup
    runs-on: ubuntu-20.04
    outputs:
      branch: ${{ steps.env.outputs.branch }}
      environment: ${{ steps.env.outputs.environment }}
      log_url: ${{ steps.env.outputs.log_url }}
      url: ${{ steps.env.outputs.url }}
    steps:
      - uses: xt0rted/pull-request-comment-branch@v1
        id: pr
        if: github.event.issue.pull_request && github.event.comment.body == '/deploy'
      - run: |+
          if [[ "${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}" == "true" ]]; then
            BRANCH="main"
            ENVIRONMENT="production"
            URL="https://www.kfirs.com"
          else
            BRANCH="${{ github.ref_name }}"
            ENVIRONMENT="${{ github.ref_name }}"
            URL="https://www.${ENVIRONMENT}.kfirs.com"
          fi
          echo "::set-output name=branch::${BRANCH}"
          echo "::set-output name=environment::${ENVIRONMENT}"
          echo "::set-output name=log_url::https://github.com/arikkfir/infrastructure/actions/runs/${{github.run_id}}"
          echo "::set-output name=url::${URL}"
        id: env

  apply-terraform-gcp:
    name: Apply GCP Terraform
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
      url: ${{ needs.setup.outputs.url }}
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./terraform/gcp
    env:
      TF_IN_AUTOMATION: true
      TF_VAR_environment: ${{ needs.setup.outputs.environment }}
      TF_VAR_gcp_billing_account: ${{ secrets.GCP_BILLING_ACCOUNT_ID }}
      TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_gcp_region: europe-west3
      TF_VAR_gcp_zone: europe-west3-a
    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v0
        with:
          service_account: gha-arikkfir-infrastructure@arikkfir.iam.gserviceaccount.com
          credentials_json: ${{ secrets.GCP_SA_GHA_ARIKKFIR_INFRASTRUCTURE_KEY }}
      - uses: google-github-actions/setup-gcloud@v0
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7
      - run: terraform fmt -check -recursive -no-color -diff
        id: fmt
      - run: terraform init -input=false -no-color
      - run: terraform plan -input=false -lock-timeout=180s -no-color -out tfplan
        id: plan
      - uses: thollander/actions-comment-pull-request@v1
        if: always() && github.event_name == 'pull_request'
        with:
          message: |-
            #### Terraform formatting: ${{ steps.fmt.outcome }}
            ```diff
            ${{ steps.fmt.outputs.stdout }}
            ```
            #### Terraform plan: ${{ steps.plan.outcome }}
            ```HCL
            ${{ steps.plan.outputs.stdout }}
            ```
      - uses: peter-evans/commit-comment@v2
        if: always() && github.event_name == 'push'
        with:
          body: |-
            #### Terraform formatting: ${{ steps.fmt.outcome }}
            ```diff
            ${{ steps.fmt.outputs.stdout }}
            ```
            #### Terraform plan: ${{ steps.plan.outcome }}
            ```HCL
            ${{ steps.plan.outputs.stdout }}
            ```
      - run: terraform apply -input=false -lock-timeout=180s -auto-approve -no-color tfplan
        id: apply
