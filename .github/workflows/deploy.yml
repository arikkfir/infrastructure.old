name: Deploy

on:
  pull_request:
    paths:
      - .github/workflows/deploy.yml
      - "*.tf"
    types:
      - synchronize
      - opened
      - reopened

defaults:
  run:
    shell: bash -euo pipefail {0}

env:
  TERRAFORM_VERSION: 1.2.7
  TF_IN_AUTOMATION: true

concurrency:
  group: production
  cancel-in-progress: false

jobs:

  train:
    name: Train
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - uses: actions/github-script@v6
        with:
          script: |-
            console.log(context.payload.pull_request)
            throw new Error("failing on purpose")

  format:
    name: Verify Format
    needs: [train]
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - run: terraform fmt -check -recursive -no-color -diff
        id: fmt

  plan:
    name: Plan
    needs: [format]
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - uses: google-github-actions/auth@v0
        with:
          service_account: ${{ secrets.GCP_SA_NAME }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v0
      - run: terraform init -input=false -no-color
      - run: terraform plan -input=false -lock-timeout=180s -no-color -out tfplan
        id: plan
        env:
          TF_VAR_gcp_region: europe-west3
          TF_VAR_gcp_zone: europe-west3-a
      - run: tar -c -j -v -f tfplan.tar.bz2 .terraform .terraform.lock.hcl *.tf tfplan
      - uses: actions/upload-artifact@v3
        with:
          name: plan
          path: tfplan.tar.bz2
          if-no-files-found: error
          retention-days: 7

  apply:
    name: Apply
    needs: [plan]
    runs-on: ubuntu-20.04
    environment:
      name: production
    timeout-minutes: 60
    steps:
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - uses: google-github-actions/auth@v0
        with:
          service_account: ${{ secrets.GCP_SA_NAME }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v0
      - uses: actions/download-artifact@v3
        with:
          name: plan
      - run: tar xjvf tfplan.tar.bz2
      - run: terraform apply -input=false -lock-timeout=180s -auto-approve -no-color tfplan
        id: apply
